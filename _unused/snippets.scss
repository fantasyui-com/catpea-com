$text-color-adjustments: 2% 5% 10% 20% 50% 75% 100%;

@each $color, $value in $theme-colors {

  // PATCH
  @each $themeColorName, $themeColor in $theme-colors {

    // if this color has bad contrast,
    @if(lightness($themeColor)<50){
    // this background color is dark, please whiten text
    @each $adjustment in $text-color-adjustments {
      @if(wcag-contrast($value, $themeColor) < 3) {
          $value: color.adjust($value, $lightness: $adjustment);
      }
    } // @each

  }else{
    // this background color is light, please darken text
    @each $adjustment in $text-color-adjustments {
      @if(wcag-contrast($value, $themeColor) < 3) {
          $value: color.adjust($value, $lightness: - $adjustment);
      }
    } // @each
  }

  } // PATCH

  @include text-emphasis-variant(".text-#{$color}", $value, true);
}


















$text-color-adjustments: 2% -2% 5% -5% 10% -10% 20% -20% 50% -50% 75% -75% 100% -100%;

  // PATCH
  @each $themeColorName, $themeColor in $theme-colors {

    // if this color has bad contrast,

    // this background color is dark, please whiten text
    @each $adjustment in $text-color-adjustments {
      @if(wcag-contrast($value, $themeColor) < 4.5) {
          $value: color.adjust($value, $lightness: $adjustment);
      }
    } // @each

  }













  







@each $color, $value in $theme-colors {


  .bg-#{$color}-light {
    $background: color.adjust($value, $lightness: 10%);
    background-color: $background !important;
  }

  .bg-#{$color}-dark {
    $background: color.adjust($value, $lightness: - 10%);
    background-color: $background !important;

  }

  .bt-#{$color} {
    $background: $value;
    background-color: $background !important;
    @if (lightness($background) > 30) {
      color: $black;
    } @else {
      color: $white;
    }
  }

  .bt-#{$color}-light {
    $background: color.adjust($value, $lightness: 7%);
    background-color: $background !important;
    @if (lightness($background) > 30) {
      color: $black;
    } @else {
      color: $white;
    }
  }

  .bt-#{$color}-dark {
    $background: color.adjust($value, $lightness: - 7%);
    background-color: $background !important;
    @if (lightness($background) > 30) {
      color: $black;
    } @else {
      color: $white;
    }
  }



}


$color-levels-base: $gray-500;
$color-levels-additive: #066d74;


$app-background-colors: () !default;
$app-text-colors: () !default;

//  @debug color.adjust(#6b717f, $red: 15); // #7a717f

$previous-color: red;
@for $index from 0 through 9 {

  //
  // .text-light-#{$index} {
  //   // color: mix($color-levels-additive, lighten($color-levels-base, $index * 5%), $index * 5%);
  //   // color: scale-color($color-levels-base, $lightness: -40%)
  //   color: color.adjust($color-levels-base, $lightness: $index * 5%); // rgba(71, 57, 71, 0.6)
  // }

  .bg-light-#{$index} {

    $background: color.adjust($gray-500, $lightness: - $index * 5%); // rgba(71, 57, 71, 0.6)
    $color:      color.adjust($gray-900, $lightness: $index * 5%); // rgba(71, 57, 71, 0.6)
    // $color:      $gray-900;
    //
    // // @while (wcag-contrast($color, $background) < 1.5) {
    // //   @debug wcag-contrast($color, $background);
    // //    $color: color.adjust($color, $lightness: 5%);
    // // }
    //
    // @if lightness($background) > 50 {
    //   // Background is lighter, color adjust should have a tendency towards darkness
    //   @while (wcag-contrast($color, $background) < 1.5) {
    //     @debug wcag-contrast($color, $background);
    //      $color: color.adjust($color, $lightness: - 5%);
    //   }
    //
    //   @for $i from 1 through 10 {
    //     $color: color.adjust($color, $lightness: - 10%);
    //   }
    //
    // } @else {
    //   // background is darker, color adjust should have a tendency towards brightness
    //   @while (wcag-contrast($color, $background) < 1.5) {
    //     @debug wcag-contrast($color, $background);
    //      $color: color.adjust($color, $lightness: 5%);
    //   }
    // }
    //
    // background: $background;
    // color: $color;

    //
    // @if ( wcag-contrast($color, $background) > 1.5 ) {
    //   $previous-color: $color;
    // } @else {
    //   //color: color.adjust($gray-100, $lightness: - $index * 5%);
    //   color: $previous-color;
    //
    //   @while wcag-contrast($color, $background) > 1.5 {
    //      $color: ($gray-100, $lightness: - $index * 5%);
    //   }
    // }




  }

}
@for $index from 0 through 9 {

  //
  // .text-light-#{$index} {
  //   // color: mix($color-levels-additive, lighten($color-levels-base, $index * 5%), $index * 5%);
  //   // color: scale-color($color-levels-base, $lightness: -40%)
  //   color: color.adjust($color-levels-base, $lightness: $index * 5%); // rgba(71, 57, 71, 0.6)
  // }

  .bg-light-raw-#{$index} {

    $background: color.adjust($gray-500, $lightness: - $index * 5%); // rgba(71, 57, 71, 0.6)
    $color:      color.adjust($gray-900, $lightness: $index * 5%); // rgba(71, 57, 71, 0.6)

    background: $background;
    color: $color;


  }

}

// @for $index from 0 through 9 {
//
//   .text-dark-#{$index} {
//     color: mix($color-levels-additive, darken($color-levels-base, $index * 5%), $index * 5%);
//   }
//   .bg-dark-#{$index} {
//
//     background: mix($color-levels-additive, darken($color-levels-base, $index * 5%), $index * 5%);
//     color: mix($color-levels-additive, lighten($color-levels-base, ( 9 - $index ) * 5%), $index * 5%);
//
//   }
// }



// $app-colors: () !default;
//
// // stylelint-disable-next-line scss/dollar-variable-default
// $app-colors: map-merge(
//   (
//   ),
//   $theme-colors
// );
//
// // stylelint-disable-next-line scss/dollar-variable-default
// $app-text: map-merge(
//   (
//   ),
//   $theme-colors
// );
