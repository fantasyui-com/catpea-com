import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, a as space, e as element, t as text, g as claim_space, c as claim_element, b as children, h as claim_text, f as detach_dev, j as attr_dev, k as add_location, o as insert_dev, p as append_dev, n as noop } from './index.c6eff7be.js';

/* src/routes/index.svelte generated by Svelte v3.16.7 */

const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	let t0;
	let div13;
	let div12;
	let div2;
	let div1;
	let img0;
	let img0_src_value;
	let t1;
	let div0;
	let h50;
	let t2;
	let t3;
	let p0;
	let t4;
	let t5;
	let div5;
	let div4;
	let img1;
	let img1_src_value;
	let t6;
	let div3;
	let h51;
	let t7;
	let t8;
	let p1;
	let t9;
	let t10;
	let div8;
	let div7;
	let img2;
	let img2_src_value;
	let t11;
	let div6;
	let h52;
	let t12;
	let t13;
	let p2;
	let t14;
	let t15;
	let div11;
	let div10;
	let img3;
	let img3_src_value;
	let t16;
	let div9;
	let h53;
	let t17;
	let t18;
	let p3;
	let t19;

	const block = {
		c: function create() {
			t0 = space();
			div13 = element("div");
			div12 = element("div");
			div2 = element("div");
			div1 = element("div");
			img0 = element("img");
			t1 = space();
			div0 = element("div");
			h50 = element("h5");
			t2 = text("Card title");
			t3 = space();
			p0 = element("p");
			t4 = text("This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.");
			t5 = space();
			div5 = element("div");
			div4 = element("div");
			img1 = element("img");
			t6 = space();
			div3 = element("div");
			h51 = element("h5");
			t7 = text("Card title");
			t8 = space();
			p1 = element("p");
			t9 = text("This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.");
			t10 = space();
			div8 = element("div");
			div7 = element("div");
			img2 = element("img");
			t11 = space();
			div6 = element("div");
			h52 = element("h5");
			t12 = text("Card title");
			t13 = space();
			p2 = element("p");
			t14 = text("This is a longer card with supporting text below as a natural lead-in to additional content.");
			t15 = space();
			div11 = element("div");
			div10 = element("div");
			img3 = element("img");
			t16 = space();
			div9 = element("div");
			h53 = element("h5");
			t17 = text("Card title");
			t18 = space();
			p3 = element("p");
			t19 = text("This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			div13 = claim_element(nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div2 = claim_element(div12_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			img0 = claim_element(div1_nodes, "IMG", { src: true, class: true, alt: true });
			t1 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h50 = claim_element(div0_nodes, "H5", { class: true });
			var h50_nodes = children(h50);
			t2 = claim_text(h50_nodes, "Card title");
			h50_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, "This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.");
			p0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t5 = claim_space(div12_nodes);
			div5 = claim_element(div12_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			img1 = claim_element(div4_nodes, "IMG", { src: true, class: true, alt: true });
			t6 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			h51 = claim_element(div3_nodes, "H5", { class: true });
			var h51_nodes = children(h51);
			t7 = claim_text(h51_nodes, "Card title");
			h51_nodes.forEach(detach_dev);
			t8 = claim_space(div3_nodes);
			p1 = claim_element(div3_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t9 = claim_text(p1_nodes, "This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.");
			p1_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t10 = claim_space(div12_nodes);
			div8 = claim_element(div12_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			img2 = claim_element(div7_nodes, "IMG", { src: true, class: true, alt: true });
			t11 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			h52 = claim_element(div6_nodes, "H5", { class: true });
			var h52_nodes = children(h52);
			t12 = claim_text(h52_nodes, "Card title");
			h52_nodes.forEach(detach_dev);
			t13 = claim_space(div6_nodes);
			p2 = claim_element(div6_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t14 = claim_text(p2_nodes, "This is a longer card with supporting text below as a natural lead-in to additional content.");
			p2_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t15 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			img3 = claim_element(div10_nodes, "IMG", { src: true, class: true, alt: true });
			t16 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			h53 = claim_element(div9_nodes, "H5", { class: true });
			var h53_nodes = children(h53);
			t17 = claim_text(h53_nodes, "Card title");
			h53_nodes.forEach(detach_dev);
			t18 = claim_space(div9_nodes);
			p3 = claim_element(div9_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t19 = claim_text(p3_nodes, "This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.");
			p3_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Cat Pea";
			if (img0.src !== (img0_src_value = "...")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "class", "card-img-top");
			attr_dev(img0, "alt", "...");
			add_location(img0, file, 55, 10, 984);
			attr_dev(h50, "class", "card-title");
			add_location(h50, file, 57, 12, 1077);
			attr_dev(p0, "class", "card-text");
			add_location(p0, file, 58, 12, 1128);
			attr_dev(div0, "class", "card-body");
			add_location(div0, file, 56, 10, 1041);
			attr_dev(div1, "class", "card");
			add_location(div1, file, 54, 8, 955);
			attr_dev(div2, "class", "col mb-4");
			add_location(div2, file, 53, 6, 924);
			if (img1.src !== (img1_src_value = "...")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "class", "card-img-top");
			attr_dev(img1, "alt", "...");
			add_location(img1, file, 64, 10, 1394);
			attr_dev(h51, "class", "card-title");
			add_location(h51, file, 66, 12, 1487);
			attr_dev(p1, "class", "card-text");
			add_location(p1, file, 67, 12, 1538);
			attr_dev(div3, "class", "card-body");
			add_location(div3, file, 65, 10, 1451);
			attr_dev(div4, "class", "card");
			add_location(div4, file, 63, 8, 1365);
			attr_dev(div5, "class", "col mb-4");
			add_location(div5, file, 62, 6, 1334);
			if (img2.src !== (img2_src_value = "...")) attr_dev(img2, "src", img2_src_value);
			attr_dev(img2, "class", "card-img-top");
			attr_dev(img2, "alt", "...");
			add_location(img2, file, 73, 10, 1804);
			attr_dev(h52, "class", "card-title");
			add_location(h52, file, 75, 12, 1897);
			attr_dev(p2, "class", "card-text");
			add_location(p2, file, 76, 12, 1948);
			attr_dev(div6, "class", "card-body");
			add_location(div6, file, 74, 10, 1861);
			attr_dev(div7, "class", "card");
			add_location(div7, file, 72, 8, 1775);
			attr_dev(div8, "class", "col mb-4");
			add_location(div8, file, 71, 6, 1744);
			if (img3.src !== (img3_src_value = "...")) attr_dev(img3, "src", img3_src_value);
			attr_dev(img3, "class", "card-img-top");
			attr_dev(img3, "alt", "...");
			add_location(img3, file, 82, 10, 2177);
			attr_dev(h53, "class", "card-title");
			add_location(h53, file, 84, 12, 2270);
			attr_dev(p3, "class", "card-text");
			add_location(p3, file, 85, 12, 2321);
			attr_dev(div9, "class", "card-body");
			add_location(div9, file, 83, 10, 2234);
			attr_dev(div10, "class", "card");
			add_location(div10, file, 81, 8, 2148);
			attr_dev(div11, "class", "col mb-4");
			add_location(div11, file, 80, 6, 2117);
			attr_dev(div12, "class", "row row-cols-1 row-cols-sm-2 row-cols-md-4");
			add_location(div12, file, 52, 4, 861);
			attr_dev(div13, "class", "container-fluid bg-secondary shadow-lg border-primary border-bottom rounded-lg p-5");
			add_location(div13, file, 49, 0, 758);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div13, anchor);
			append_dev(div13, div12);
			append_dev(div12, div2);
			append_dev(div2, div1);
			append_dev(div1, img0);
			append_dev(div1, t1);
			append_dev(div1, div0);
			append_dev(div0, h50);
			append_dev(h50, t2);
			append_dev(div0, t3);
			append_dev(div0, p0);
			append_dev(p0, t4);
			append_dev(div12, t5);
			append_dev(div12, div5);
			append_dev(div5, div4);
			append_dev(div4, img1);
			append_dev(div4, t6);
			append_dev(div4, div3);
			append_dev(div3, h51);
			append_dev(h51, t7);
			append_dev(div3, t8);
			append_dev(div3, p1);
			append_dev(p1, t9);
			append_dev(div12, t10);
			append_dev(div12, div8);
			append_dev(div8, div7);
			append_dev(div7, img2);
			append_dev(div7, t11);
			append_dev(div7, div6);
			append_dev(div6, h52);
			append_dev(h52, t12);
			append_dev(div6, t13);
			append_dev(div6, p2);
			append_dev(p2, t14);
			append_dev(div12, t15);
			append_dev(div12, div11);
			append_dev(div11, div10);
			append_dev(div10, img3);
			append_dev(div10, t16);
			append_dev(div10, div9);
			append_dev(div9, h53);
			append_dev(h53, t17);
			append_dev(div9, t18);
			append_dev(div9, p3);
			append_dev(p3, t19);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div13);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function rnd(min, max) {
	min = Math.ceil(min);
	max = Math.floor(max);
	return Math.floor(Math.random() * (max - min + 1)) + min;
}

function instance($$self) {
	const date = new Date();
	const year = date.getFullYear();

	const names = [
		["Catpea"],
		["Advanced"],
		["Technological"],
		["Product"],
		["Emergence"],
		["Architecture"]
	];

	let name = "";

	const makeName = function () {
		name = "";

		for (let potential of names) {
			console.log(names, potential);
			let randomIndex = rnd(0, potential.length - 1);
			let chosen = potential[randomIndex];
			name = name + " " + chosen;
		}
	};

	makeName();
	setInterval(makeName, 1000 * 60);

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ("name" in $$props) name = $$props.name;
	};

	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYzlhMDE3NTcuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cbmNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xuY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcblxuZnVuY3Rpb24gcm5kKG1pbiwgbWF4KSB7XG4gIG1pbiA9IE1hdGguY2VpbChtaW4pO1xuICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluOyAvL1RoZSBtYXhpbXVtIGlzIGluY2x1c2l2ZSBhbmQgdGhlIG1pbmltdW0gaXMgaW5jbHVzaXZlXG59XG5cbmNvbnN0IG5hbWVzID0gW1xuICBbJ0NhdHBlYSddLFxuICBbJ0FkdmFuY2VkJ10sXG4gIFsnVGVjaG5vbG9naWNhbCddLFxuICBbJ1Byb2R1Y3QnXSxcbiAgWydFbWVyZ2VuY2UnXSxcbiAgWydBcmNoaXRlY3R1cmUnXVxuXTtcbmxldCBuYW1lID0gXCJcIjtcblxuY29uc3QgbWFrZU5hbWUgPSBmdW5jdGlvbigpe1xubmFtZSA9IFwiXCI7XG5mb3IgKGxldCBwb3RlbnRpYWwgb2YgbmFtZXMpe1xuICBjb25zb2xlLmxvZyhuYW1lcywgcG90ZW50aWFsKTtcbiAgbGV0IHJhbmRvbUluZGV4ID0gcm5kKDAscG90ZW50aWFsLmxlbmd0aC0xKVxuICBsZXQgY2hvc2VuID0gcG90ZW50aWFsW3JhbmRvbUluZGV4XTtcbiAgbmFtZSA9IG5hbWUgKyAnICcgKyBjaG9zZW47XG5cbn1cbn07XG5cbm1ha2VOYW1lKCk7IHNldEludGVydmFsKG1ha2VOYW1lLCAxMDAwKjYwKTtcblxuPC9zY3JpcHQ+XG48c3R5bGU+XG5cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkNhdCBQZWE8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuXG5cblxuXG5cblxuPGRpdiBjbGFzcz1cImNvbnRhaW5lci1mbHVpZCBiZy1zZWNvbmRhcnkgc2hhZG93LWxnIGJvcmRlci1wcmltYXJ5IGJvcmRlci1ib3R0b20gcm91bmRlZC1sZyBwLTVcIj5cblxuXG4gICAgPGRpdiBjbGFzcz1cInJvdyByb3ctY29scy0xIHJvdy1jb2xzLXNtLTIgcm93LWNvbHMtbWQtNFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImNvbCBtYi00XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgPGltZyBzcmM9XCIuLi5cIiBjbGFzcz1cImNhcmQtaW1nLXRvcFwiIGFsdD1cIi4uLlwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgICAgICAgIDxoNSBjbGFzcz1cImNhcmQtdGl0bGVcIj5DYXJkIHRpdGxlPC9oNT5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiY2FyZC10ZXh0XCI+VGhpcyBpcyBhIGxvbmdlciBjYXJkIHdpdGggc3VwcG9ydGluZyB0ZXh0IGJlbG93IGFzIGEgbmF0dXJhbCBsZWFkLWluIHRvIGFkZGl0aW9uYWwgY29udGVudC4gVGhpcyBjb250ZW50IGlzIGEgbGl0dGxlIGJpdCBsb25nZXIuPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImNvbCBtYi00XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgPGltZyBzcmM9XCIuLi5cIiBjbGFzcz1cImNhcmQtaW1nLXRvcFwiIGFsdD1cIi4uLlwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgICAgICAgIDxoNSBjbGFzcz1cImNhcmQtdGl0bGVcIj5DYXJkIHRpdGxlPC9oNT5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiY2FyZC10ZXh0XCI+VGhpcyBpcyBhIGxvbmdlciBjYXJkIHdpdGggc3VwcG9ydGluZyB0ZXh0IGJlbG93IGFzIGEgbmF0dXJhbCBsZWFkLWluIHRvIGFkZGl0aW9uYWwgY29udGVudC4gVGhpcyBjb250ZW50IGlzIGEgbGl0dGxlIGJpdCBsb25nZXIuPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImNvbCBtYi00XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgPGltZyBzcmM9XCIuLi5cIiBjbGFzcz1cImNhcmQtaW1nLXRvcFwiIGFsdD1cIi4uLlwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgICAgICAgIDxoNSBjbGFzcz1cImNhcmQtdGl0bGVcIj5DYXJkIHRpdGxlPC9oNT5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiY2FyZC10ZXh0XCI+VGhpcyBpcyBhIGxvbmdlciBjYXJkIHdpdGggc3VwcG9ydGluZyB0ZXh0IGJlbG93IGFzIGEgbmF0dXJhbCBsZWFkLWluIHRvIGFkZGl0aW9uYWwgY29udGVudC48L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sIG1iLTRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICAgICAgICA8aW1nIHNyYz1cIi4uLlwiIGNsYXNzPVwiY2FyZC1pbWctdG9wXCIgYWx0PVwiLi4uXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICAgICAgPGg1IGNsYXNzPVwiY2FyZC10aXRsZVwiPkNhcmQgdGl0bGU8L2g1PlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJjYXJkLXRleHRcIj5UaGlzIGlzIGEgbG9uZ2VyIGNhcmQgd2l0aCBzdXBwb3J0aW5nIHRleHQgYmVsb3cgYXMgYSBuYXR1cmFsIGxlYWQtaW4gdG8gYWRkaXRpb25hbCBjb250ZW50LiBUaGlzIGNvbnRlbnQgaXMgYSBsaXR0bGUgYml0IGxvbmdlci48L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cblxuXG5cbjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBS1MsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHO0NBQ25CLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUc7Q0FDbkIsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRztRQUNiLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sTUFBTSxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxHQUFHOzs7O09BTnBELElBQUksT0FBTyxJQUFJO09BQ2YsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXOztPQVF2QixLQUFLO0dBQ1IsUUFBUTtHQUNSLFVBQVU7R0FDVixlQUFlO0dBQ2YsU0FBUztHQUNULFdBQVc7R0FDWCxjQUFjOzs7S0FFYixJQUFJLEdBQUcsRUFBRTs7T0FFUCxRQUFRO0VBQ2QsSUFBSSxHQUFHLEVBQUU7O1dBQ0EsU0FBUyxJQUFJLEtBQUs7R0FDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsU0FBUztPQUN4QixXQUFXLEdBQUcsR0FBRyxDQUFDLENBQUMsRUFBQyxTQUFTLENBQUMsTUFBTSxHQUFDLENBQUM7T0FDdEMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxXQUFXO0dBQ2xDLElBQUksR0FBRyxJQUFJLEdBQUcsR0FBRyxHQUFHLE1BQU07Ozs7Q0FLNUIsUUFBUTtDQUFJLFdBQVcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxHQUFDLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
