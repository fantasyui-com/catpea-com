import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, a as space, e as element, t as text, g as claim_space, c as claim_element, b as children, f as detach_dev, h as claim_text, j as attr_dev, k as add_location, o as insert_dev, p as append_dev, n as noop } from './index.d7dda366.js';

/* src/routes/about.svelte generated by Svelte v3.16.7 */

const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let t0;
	let div6;
	let div5;
	let div0;
	let t1;
	let div3;
	let div2;
	let p;
	let t2;
	let t3;
	let div1;
	let li2;
	let t4;
	let ul0;
	let li0;
	let t5;
	let t6;
	let li1;
	let t7;
	let t8;
	let li5;
	let t9;
	let ul1;
	let li3;
	let t10;
	let t11;
	let li4;
	let t12;
	let t13;
	let li7;
	let t14;
	let ul2;
	let li6;
	let t15;
	let t16;
	let li9;
	let t17;
	let ul3;
	let li8;
	let t18;
	let t19;
	let li11;
	let t20;
	let ul4;
	let li10;
	let t21;
	let t22;
	let div4;

	const block = {
		c: function create() {
			t0 = space();
			div6 = element("div");
			div5 = element("div");
			div0 = element("div");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			p = element("p");
			t2 = text("Modern Internet Research");
			t3 = space();
			div1 = element("div");
			li2 = element("li");
			t4 = text("How to create a safe Pay Per Post website?\n\t\t\t\t    ");
			ul0 = element("ul");
			li0 = element("li");
			t5 = text("Use of third party off-site processor still poses fraud risk.");
			t6 = space();
			li1 = element("li");
			t7 = text("Bitcoin Merchants sill face fraud risks.");
			t8 = space();
			li5 = element("li");
			t9 = text("How to create a low-liability Social Network?\n\t\t\t\t    ");
			ul1 = element("ul");
			li3 = element("li");
			t10 = text("User management poses security risks.");
			t11 = space();
			li4 = element("li");
			t12 = text("Third party user management is still too complex. Trading safety for complexity.");
			t13 = space();
			li7 = element("li");
			t14 = text("How to create quality posts where content creators can stand behind their content?\n\t\t\t\t    ");
			ul2 = element("ul");
			li6 = element("li");
			t15 = text("There is great safety in linking to top ranking posts on other networks, this cannot be overlooked.");
			t16 = space();
			li9 = element("li");
			t17 = text("What is the simplest way to get bots to help the user program.\n\t\t\t\t    ");
			ul3 = element("ul");
			li8 = element("li");
			t18 = text("Bots are already operational, this in under 50 lines of code, this should be taken advantage of.");
			t19 = space();
			li11 = element("li");
			t20 = text("How to create a Mechanical Turk where users can earn credits and/or money.\n\t\t\t\t    ");
			ul4 = element("ul");
			li10 = element("li");
			t21 = text("This seems to be a separate website facing the same problems as above.");
			t22 = space();
			div4 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t1 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			p = claim_element(div2_nodes, "P", { class: true });
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Modern Internet Research");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			li2 = claim_element(div1_nodes, "LI", {});
			var li2_nodes = children(li2);
			t4 = claim_text(li2_nodes, "How to create a safe Pay Per Post website?\n\t\t\t\t    ");
			ul0 = claim_element(li2_nodes, "UL", {});
			var ul0_nodes = children(ul0);
			li0 = claim_element(ul0_nodes, "LI", {});
			var li0_nodes = children(li0);
			t5 = claim_text(li0_nodes, "Use of third party off-site processor still poses fraud risk.");
			li0_nodes.forEach(detach_dev);
			t6 = claim_space(ul0_nodes);
			li1 = claim_element(ul0_nodes, "LI", {});
			var li1_nodes = children(li1);
			t7 = claim_text(li1_nodes, "Bitcoin Merchants sill face fraud risks.");
			li1_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			li2_nodes.forEach(detach_dev);
			t8 = claim_space(div1_nodes);
			li5 = claim_element(div1_nodes, "LI", {});
			var li5_nodes = children(li5);
			t9 = claim_text(li5_nodes, "How to create a low-liability Social Network?\n\t\t\t\t    ");
			ul1 = claim_element(li5_nodes, "UL", {});
			var ul1_nodes = children(ul1);
			li3 = claim_element(ul1_nodes, "LI", {});
			var li3_nodes = children(li3);
			t10 = claim_text(li3_nodes, "User management poses security risks.");
			li3_nodes.forEach(detach_dev);
			t11 = claim_space(ul1_nodes);
			li4 = claim_element(ul1_nodes, "LI", {});
			var li4_nodes = children(li4);
			t12 = claim_text(li4_nodes, "Third party user management is still too complex. Trading safety for complexity.");
			li4_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			li5_nodes.forEach(detach_dev);
			t13 = claim_space(div1_nodes);
			li7 = claim_element(div1_nodes, "LI", {});
			var li7_nodes = children(li7);
			t14 = claim_text(li7_nodes, "How to create quality posts where content creators can stand behind their content?\n\t\t\t\t    ");
			ul2 = claim_element(li7_nodes, "UL", {});
			var ul2_nodes = children(ul2);
			li6 = claim_element(ul2_nodes, "LI", {});
			var li6_nodes = children(li6);
			t15 = claim_text(li6_nodes, "There is great safety in linking to top ranking posts on other networks, this cannot be overlooked.");
			li6_nodes.forEach(detach_dev);
			ul2_nodes.forEach(detach_dev);
			li7_nodes.forEach(detach_dev);
			t16 = claim_space(div1_nodes);
			li9 = claim_element(div1_nodes, "LI", {});
			var li9_nodes = children(li9);
			t17 = claim_text(li9_nodes, "What is the simplest way to get bots to help the user program.\n\t\t\t\t    ");
			ul3 = claim_element(li9_nodes, "UL", {});
			var ul3_nodes = children(ul3);
			li8 = claim_element(ul3_nodes, "LI", {});
			var li8_nodes = children(li8);
			t18 = claim_text(li8_nodes, "Bots are already operational, this in under 50 lines of code, this should be taken advantage of.");
			li8_nodes.forEach(detach_dev);
			ul3_nodes.forEach(detach_dev);
			li9_nodes.forEach(detach_dev);
			t19 = claim_space(div1_nodes);
			li11 = claim_element(div1_nodes, "LI", {});
			var li11_nodes = children(li11);
			t20 = claim_text(li11_nodes, "How to create a Mechanical Turk where users can earn credits and/or money.\n\t\t\t\t    ");
			ul4 = claim_element(li11_nodes, "UL", {});
			var ul4_nodes = children(ul4);
			li10 = claim_element(ul4_nodes, "LI", {});
			var li10_nodes = children(li10);
			t21 = claim_text(li10_nodes, "This seems to be a separate website facing the same problems as above.");
			li10_nodes.forEach(detach_dev);
			ul4_nodes.forEach(detach_dev);
			li11_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t22 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			children(div4).forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			attr_dev(div0, "class", "col-lg-4");
			add_location(div0, file, 17, 3, 134);
			attr_dev(p, "class", "lead");
			add_location(p, file, 23, 4, 285);
			add_location(li0, file, 34, 10, 449);
			add_location(li1, file, 35, 10, 530);
			add_location(ul0, file, 33, 8, 434);
			add_location(li2, file, 32, 5, 379);
			add_location(li3, file, 41, 10, 685);
			add_location(li4, file, 42, 10, 742);
			add_location(ul1, file, 40, 8, 670);
			add_location(li5, file, 39, 5, 612);
			add_location(li6, file, 48, 10, 974);
			add_location(ul2, file, 47, 8, 959);
			add_location(li7, file, 46, 5, 864);
			add_location(li8, file, 54, 10, 1205);
			add_location(ul3, file, 53, 8, 1190);
			add_location(li9, file, 52, 5, 1115);
			add_location(li10, file, 60, 10, 1445);
			add_location(ul4, file, 59, 8, 1430);
			add_location(li11, file, 58, 5, 1343);
			attr_dev(div1, "class", "small");
			add_location(div1, file, 27, 7, 349);
			attr_dev(div2, "class", "container bg-secondary shadow-lg border-success border-bottom rounded-lg p-5");
			add_location(div2, file, 21, 3, 189);
			attr_dev(div3, "class", "col");
			add_location(div3, file, 19, 3, 167);
			attr_dev(div4, "class", "col-lg-4");
			add_location(div4, file, 71, 3, 1591);
			attr_dev(div5, "class", "row");
			add_location(div5, file, 16, 2, 113);
			attr_dev(div6, "class", "container-fluid");
			add_location(div6, file, 15, 1, 81);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, div5);
			append_dev(div5, div0);
			append_dev(div5, t1);
			append_dev(div5, div3);
			append_dev(div3, div2);
			append_dev(div2, p);
			append_dev(p, t2);
			append_dev(div2, t3);
			append_dev(div2, div1);
			append_dev(div1, li2);
			append_dev(li2, t4);
			append_dev(li2, ul0);
			append_dev(ul0, li0);
			append_dev(li0, t5);
			append_dev(ul0, t6);
			append_dev(ul0, li1);
			append_dev(li1, t7);
			append_dev(div1, t8);
			append_dev(div1, li5);
			append_dev(li5, t9);
			append_dev(li5, ul1);
			append_dev(ul1, li3);
			append_dev(li3, t10);
			append_dev(ul1, t11);
			append_dev(ul1, li4);
			append_dev(li4, t12);
			append_dev(div1, t13);
			append_dev(div1, li7);
			append_dev(li7, t14);
			append_dev(li7, ul2);
			append_dev(ul2, li6);
			append_dev(li6, t15);
			append_dev(div1, t16);
			append_dev(div1, li9);
			append_dev(li9, t17);
			append_dev(li9, ul3);
			append_dev(ul3, li8);
			append_dev(li8, t18);
			append_dev(div1, t19);
			append_dev(div1, li11);
			append_dev(li11, t20);
			append_dev(li11, ul4);
			append_dev(ul4, li10);
			append_dev(li10, t21);
			append_dev(div5, t22);
			append_dev(div5, div4);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div6);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuMDE5OThhYmEuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
