import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, a as space, e as element, t as text, g as claim_space, c as claim_element, b as children, f as detach_dev, h as claim_text, j as attr_dev, k as add_location, o as insert_dev, p as append_dev, n as noop } from './index.402bcfc1.js';

/* src/routes/about.svelte generated by Svelte v3.16.7 */

const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let t0;
	let div6;
	let div5;
	let div0;
	let t1;
	let div3;
	let div2;
	let p;
	let t2;
	let t3;
	let div1;
	let t4;
	let ul1;
	let li0;
	let t5;
	let t6;
	let li1;
	let t7;
	let t8;
	let li2;
	let t9;
	let t10;
	let li3;
	let t11;
	let t12;
	let li8;
	let t13;
	let ul0;
	let li4;
	let t14;
	let t15;
	let li5;
	let t16;
	let t17;
	let li6;
	let t18;
	let t19;
	let li7;
	let t20;
	let t21;
	let li9;
	let t22;
	let t23;
	let li10;
	let t24;
	let t25;
	let li11;
	let t26;
	let t27;
	let li14;
	let t28;
	let ul2;
	let li12;
	let t29;
	let t30;
	let li13;
	let t31;
	let t32;
	let li17;
	let t33;
	let ul3;
	let li15;
	let t34;
	let t35;
	let li16;
	let t36;
	let t37;
	let li19;
	let t38;
	let ul4;
	let li18;
	let t39;
	let t40;
	let li21;
	let t41;
	let ul5;
	let li20;
	let t42;
	let t43;
	let li23;
	let t44;
	let ul6;
	let li22;
	let t45;
	let t46;
	let div4;

	const block = {
		c: function create() {
			t0 = space();
			div6 = element("div");
			div5 = element("div");
			div0 = element("div");
			t1 = space();
			div3 = element("div");
			div2 = element("div");
			p = element("p");
			t2 = text("Modern Internet Research");
			t3 = space();
			div1 = element("div");
			t4 = text("v\n\n\t\t\t\t");
			ul1 = element("ul");
			li0 = element("li");
			t5 = text("Lorem ipsum dolor sit amet");
			t6 = space();
			li1 = element("li");
			t7 = text("Consectetur adipiscing elit");
			t8 = space();
			li2 = element("li");
			t9 = text("Integer molestie lorem at massa");
			t10 = space();
			li3 = element("li");
			t11 = text("Facilisis in pretium nisl aliquet");
			t12 = space();
			li8 = element("li");
			t13 = text("Nulla volutpat aliquam velit\n\t\t\t    ");
			ul0 = element("ul");
			li4 = element("li");
			t14 = text("Phasellus iaculis neque");
			t15 = space();
			li5 = element("li");
			t16 = text("Purus sodales ultricies");
			t17 = space();
			li6 = element("li");
			t18 = text("Vestibulum laoreet porttitor sem");
			t19 = space();
			li7 = element("li");
			t20 = text("Ac tristique libero volutpat at");
			t21 = space();
			li9 = element("li");
			t22 = text("Faucibus porta lacus fringilla vel");
			t23 = space();
			li10 = element("li");
			t24 = text("Aenean sit amet erat nunc");
			t25 = space();
			li11 = element("li");
			t26 = text("Eget porttitor lorem");
			t27 = space();
			li14 = element("li");
			t28 = text("How to create a safe Pay Per Post website?\n\t\t\t\t    ");
			ul2 = element("ul");
			li12 = element("li");
			t29 = text("Use of third party off-site processor still poses fraud risk.");
			t30 = space();
			li13 = element("li");
			t31 = text("Bitcoin Merchants sill face fraud risks.");
			t32 = space();
			li17 = element("li");
			t33 = text("How to create a low-liability Social Network?\n\t\t\t\t    ");
			ul3 = element("ul");
			li15 = element("li");
			t34 = text("User management poses security risks.");
			t35 = space();
			li16 = element("li");
			t36 = text("Third party user management is still too complex. Trading safety for complexity.");
			t37 = space();
			li19 = element("li");
			t38 = text("How to create quality posts where content creators can stand behind their content?\n\t\t\t\t    ");
			ul4 = element("ul");
			li18 = element("li");
			t39 = text("There is great safety in linking to top ranking posts on other networks, this cannot be overlooked.");
			t40 = space();
			li21 = element("li");
			t41 = text("What is the simplest way to get bots to help the user program.\n\t\t\t\t    ");
			ul5 = element("ul");
			li20 = element("li");
			t42 = text("Bots are already operational.");
			t43 = space();
			li23 = element("li");
			t44 = text("How to create a Mechanical Turk where users can earn credits and/or money.\n\t\t\t\t    ");
			ul6 = element("ul");
			li22 = element("li");
			t45 = text("This seems to be a separate website facing the same problems as above.");
			t46 = space();
			div4 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			t0 = claim_space(nodes);
			div6 = claim_element(nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t1 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			p = claim_element(div2_nodes, "P", { class: true });
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Modern Internet Research");
			p_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t4 = claim_text(div1_nodes, "v\n\n\t\t\t\t");
			ul1 = claim_element(div1_nodes, "UL", { class: true });
			var ul1_nodes = children(ul1);
			li0 = claim_element(ul1_nodes, "LI", {});
			var li0_nodes = children(li0);
			t5 = claim_text(li0_nodes, "Lorem ipsum dolor sit amet");
			li0_nodes.forEach(detach_dev);
			t6 = claim_space(ul1_nodes);
			li1 = claim_element(ul1_nodes, "LI", {});
			var li1_nodes = children(li1);
			t7 = claim_text(li1_nodes, "Consectetur adipiscing elit");
			li1_nodes.forEach(detach_dev);
			t8 = claim_space(ul1_nodes);
			li2 = claim_element(ul1_nodes, "LI", {});
			var li2_nodes = children(li2);
			t9 = claim_text(li2_nodes, "Integer molestie lorem at massa");
			li2_nodes.forEach(detach_dev);
			t10 = claim_space(ul1_nodes);
			li3 = claim_element(ul1_nodes, "LI", {});
			var li3_nodes = children(li3);
			t11 = claim_text(li3_nodes, "Facilisis in pretium nisl aliquet");
			li3_nodes.forEach(detach_dev);
			t12 = claim_space(ul1_nodes);
			li8 = claim_element(ul1_nodes, "LI", {});
			var li8_nodes = children(li8);
			t13 = claim_text(li8_nodes, "Nulla volutpat aliquam velit\n\t\t\t    ");
			ul0 = claim_element(li8_nodes, "UL", {});
			var ul0_nodes = children(ul0);
			li4 = claim_element(ul0_nodes, "LI", {});
			var li4_nodes = children(li4);
			t14 = claim_text(li4_nodes, "Phasellus iaculis neque");
			li4_nodes.forEach(detach_dev);
			t15 = claim_space(ul0_nodes);
			li5 = claim_element(ul0_nodes, "LI", {});
			var li5_nodes = children(li5);
			t16 = claim_text(li5_nodes, "Purus sodales ultricies");
			li5_nodes.forEach(detach_dev);
			t17 = claim_space(ul0_nodes);
			li6 = claim_element(ul0_nodes, "LI", {});
			var li6_nodes = children(li6);
			t18 = claim_text(li6_nodes, "Vestibulum laoreet porttitor sem");
			li6_nodes.forEach(detach_dev);
			t19 = claim_space(ul0_nodes);
			li7 = claim_element(ul0_nodes, "LI", {});
			var li7_nodes = children(li7);
			t20 = claim_text(li7_nodes, "Ac tristique libero volutpat at");
			li7_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			li8_nodes.forEach(detach_dev);
			t21 = claim_space(ul1_nodes);
			li9 = claim_element(ul1_nodes, "LI", {});
			var li9_nodes = children(li9);
			t22 = claim_text(li9_nodes, "Faucibus porta lacus fringilla vel");
			li9_nodes.forEach(detach_dev);
			t23 = claim_space(ul1_nodes);
			li10 = claim_element(ul1_nodes, "LI", {});
			var li10_nodes = children(li10);
			t24 = claim_text(li10_nodes, "Aenean sit amet erat nunc");
			li10_nodes.forEach(detach_dev);
			t25 = claim_space(ul1_nodes);
			li11 = claim_element(ul1_nodes, "LI", {});
			var li11_nodes = children(li11);
			t26 = claim_text(li11_nodes, "Eget porttitor lorem");
			li11_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			t27 = claim_space(div1_nodes);
			li14 = claim_element(div1_nodes, "LI", {});
			var li14_nodes = children(li14);
			t28 = claim_text(li14_nodes, "How to create a safe Pay Per Post website?\n\t\t\t\t    ");
			ul2 = claim_element(li14_nodes, "UL", {});
			var ul2_nodes = children(ul2);
			li12 = claim_element(ul2_nodes, "LI", {});
			var li12_nodes = children(li12);
			t29 = claim_text(li12_nodes, "Use of third party off-site processor still poses fraud risk.");
			li12_nodes.forEach(detach_dev);
			t30 = claim_space(ul2_nodes);
			li13 = claim_element(ul2_nodes, "LI", {});
			var li13_nodes = children(li13);
			t31 = claim_text(li13_nodes, "Bitcoin Merchants sill face fraud risks.");
			li13_nodes.forEach(detach_dev);
			ul2_nodes.forEach(detach_dev);
			li14_nodes.forEach(detach_dev);
			t32 = claim_space(div1_nodes);
			li17 = claim_element(div1_nodes, "LI", {});
			var li17_nodes = children(li17);
			t33 = claim_text(li17_nodes, "How to create a low-liability Social Network?\n\t\t\t\t    ");
			ul3 = claim_element(li17_nodes, "UL", {});
			var ul3_nodes = children(ul3);
			li15 = claim_element(ul3_nodes, "LI", {});
			var li15_nodes = children(li15);
			t34 = claim_text(li15_nodes, "User management poses security risks.");
			li15_nodes.forEach(detach_dev);
			t35 = claim_space(ul3_nodes);
			li16 = claim_element(ul3_nodes, "LI", {});
			var li16_nodes = children(li16);
			t36 = claim_text(li16_nodes, "Third party user management is still too complex. Trading safety for complexity.");
			li16_nodes.forEach(detach_dev);
			ul3_nodes.forEach(detach_dev);
			li17_nodes.forEach(detach_dev);
			t37 = claim_space(div1_nodes);
			li19 = claim_element(div1_nodes, "LI", {});
			var li19_nodes = children(li19);
			t38 = claim_text(li19_nodes, "How to create quality posts where content creators can stand behind their content?\n\t\t\t\t    ");
			ul4 = claim_element(li19_nodes, "UL", {});
			var ul4_nodes = children(ul4);
			li18 = claim_element(ul4_nodes, "LI", {});
			var li18_nodes = children(li18);
			t39 = claim_text(li18_nodes, "There is great safety in linking to top ranking posts on other networks, this cannot be overlooked.");
			li18_nodes.forEach(detach_dev);
			ul4_nodes.forEach(detach_dev);
			li19_nodes.forEach(detach_dev);
			t40 = claim_space(div1_nodes);
			li21 = claim_element(div1_nodes, "LI", {});
			var li21_nodes = children(li21);
			t41 = claim_text(li21_nodes, "What is the simplest way to get bots to help the user program.\n\t\t\t\t    ");
			ul5 = claim_element(li21_nodes, "UL", {});
			var ul5_nodes = children(ul5);
			li20 = claim_element(ul5_nodes, "LI", {});
			var li20_nodes = children(li20);
			t42 = claim_text(li20_nodes, "Bots are already operational.");
			li20_nodes.forEach(detach_dev);
			ul5_nodes.forEach(detach_dev);
			li21_nodes.forEach(detach_dev);
			t43 = claim_space(div1_nodes);
			li23 = claim_element(div1_nodes, "LI", {});
			var li23_nodes = children(li23);
			t44 = claim_text(li23_nodes, "How to create a Mechanical Turk where users can earn credits and/or money.\n\t\t\t\t    ");
			ul6 = claim_element(li23_nodes, "UL", {});
			var ul6_nodes = children(ul6);
			li22 = claim_element(ul6_nodes, "LI", {});
			var li22_nodes = children(li22);
			t45 = claim_text(li22_nodes, "This seems to be a separate website facing the same problems as above.");
			li22_nodes.forEach(detach_dev);
			ul6_nodes.forEach(detach_dev);
			li23_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t46 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			children(div4).forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			attr_dev(div0, "class", "col-lg-4");
			add_location(div0, file, 17, 3, 134);
			attr_dev(p, "class", "lead");
			add_location(p, file, 23, 4, 285);
			add_location(li0, file, 33, 5, 414);
			add_location(li1, file, 34, 5, 455);
			add_location(li2, file, 35, 5, 497);
			add_location(li3, file, 36, 5, 543);
			add_location(li4, file, 39, 9, 645);
			add_location(li5, file, 40, 9, 687);
			add_location(li6, file, 41, 9, 729);
			add_location(li7, file, 42, 9, 780);
			add_location(ul0, file, 38, 7, 631);
			add_location(li8, file, 37, 5, 591);
			add_location(li9, file, 45, 5, 850);
			add_location(li10, file, 46, 5, 899);
			add_location(li11, file, 47, 5, 939);
			attr_dev(ul1, "class", "list-unstyled");
			add_location(ul1, file, 32, 4, 382);
			add_location(li12, file, 54, 10, 1056);
			add_location(li13, file, 55, 10, 1137);
			add_location(ul2, file, 53, 8, 1041);
			add_location(li14, file, 52, 5, 986);
			add_location(li15, file, 61, 10, 1292);
			add_location(li16, file, 62, 10, 1349);
			add_location(ul3, file, 60, 8, 1277);
			add_location(li17, file, 59, 5, 1219);
			add_location(li18, file, 68, 10, 1581);
			add_location(ul4, file, 67, 8, 1566);
			add_location(li19, file, 66, 5, 1471);
			add_location(li20, file, 74, 10, 1812);
			add_location(ul5, file, 73, 8, 1797);
			add_location(li21, file, 72, 5, 1722);
			add_location(li22, file, 80, 10, 1985);
			add_location(ul6, file, 79, 8, 1970);
			add_location(li23, file, 78, 5, 1883);
			attr_dev(div1, "class", "small");
			add_location(div1, file, 27, 7, 349);
			attr_dev(div2, "class", "container bg-secondary shadow-lg border-success border-bottom rounded-lg p-5");
			add_location(div2, file, 21, 3, 189);
			attr_dev(div3, "class", "col");
			add_location(div3, file, 19, 3, 167);
			attr_dev(div4, "class", "col-lg-4");
			add_location(div4, file, 91, 3, 2131);
			attr_dev(div5, "class", "row");
			add_location(div5, file, 16, 2, 113);
			attr_dev(div6, "class", "container-fluid");
			add_location(div6, file, 15, 1, 81);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div6, anchor);
			append_dev(div6, div5);
			append_dev(div5, div0);
			append_dev(div5, t1);
			append_dev(div5, div3);
			append_dev(div3, div2);
			append_dev(div2, p);
			append_dev(p, t2);
			append_dev(div2, t3);
			append_dev(div2, div1);
			append_dev(div1, t4);
			append_dev(div1, ul1);
			append_dev(ul1, li0);
			append_dev(li0, t5);
			append_dev(ul1, t6);
			append_dev(ul1, li1);
			append_dev(li1, t7);
			append_dev(ul1, t8);
			append_dev(ul1, li2);
			append_dev(li2, t9);
			append_dev(ul1, t10);
			append_dev(ul1, li3);
			append_dev(li3, t11);
			append_dev(ul1, t12);
			append_dev(ul1, li8);
			append_dev(li8, t13);
			append_dev(li8, ul0);
			append_dev(ul0, li4);
			append_dev(li4, t14);
			append_dev(ul0, t15);
			append_dev(ul0, li5);
			append_dev(li5, t16);
			append_dev(ul0, t17);
			append_dev(ul0, li6);
			append_dev(li6, t18);
			append_dev(ul0, t19);
			append_dev(ul0, li7);
			append_dev(li7, t20);
			append_dev(ul1, t21);
			append_dev(ul1, li9);
			append_dev(li9, t22);
			append_dev(ul1, t23);
			append_dev(ul1, li10);
			append_dev(li10, t24);
			append_dev(ul1, t25);
			append_dev(ul1, li11);
			append_dev(li11, t26);
			append_dev(div1, t27);
			append_dev(div1, li14);
			append_dev(li14, t28);
			append_dev(li14, ul2);
			append_dev(ul2, li12);
			append_dev(li12, t29);
			append_dev(ul2, t30);
			append_dev(ul2, li13);
			append_dev(li13, t31);
			append_dev(div1, t32);
			append_dev(div1, li17);
			append_dev(li17, t33);
			append_dev(li17, ul3);
			append_dev(ul3, li15);
			append_dev(li15, t34);
			append_dev(ul3, t35);
			append_dev(ul3, li16);
			append_dev(li16, t36);
			append_dev(div1, t37);
			append_dev(div1, li19);
			append_dev(li19, t38);
			append_dev(li19, ul4);
			append_dev(ul4, li18);
			append_dev(li18, t39);
			append_dev(div1, t40);
			append_dev(div1, li21);
			append_dev(li21, t41);
			append_dev(li21, ul5);
			append_dev(ul5, li20);
			append_dev(li20, t42);
			append_dev(div1, t43);
			append_dev(div1, li23);
			append_dev(li23, t44);
			append_dev(li23, ul6);
			append_dev(ul6, li22);
			append_dev(li22, t45);
			append_dev(div5, t46);
			append_dev(div5, div4);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div6);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuZDdiMGNkN2UuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
